[envs.chop_oracle]
binary = true 
command = "odgi chop -i {filename} -c 3 -o - | odgi view -g -i - | slow_odgi norm --nl"
output.chop = "-"

[envs.chop_test]
binary = true
command = "slow_odgi chop {filename} -n 3"
output.chop = "-"

[envs.crush_oracle]
binary = true
command = "odgi crush -i {filename} -o - | odgi view -g -i - | slow_odgi norm"
output.crush = "-"

[envs.crush_test]
binary = true
command = "slow_odgi crush {filename}"
output.crush = "-"

[envs.degree_oracle]
binary = true
command = "odgi degree -d --input={filename}"
output.degree = "-"

[envs.degree_test]
binary = true
command = "slow_odgi degree {filename}"
output.degree = "-"

[envs.depth_setup]
binary = true
command = "slow_odgi somepaths --drop 50 {filename}"
output.depthpaths = "-"

[envs.depth_oracle]
binary = true
command = "odgi depth -d -i {filename} -s {base}.depthpaths"
output.depth = "-"

[envs.depth_test]
binary = true
command = "slow_odgi depth --paths {base}.depthpaths {filename}"
output.depth = "-"

[envs.flatten_oracle]
binary = true
command = "odgi flatten -i {filename} -f {base}.flatten.fasta -b {base}.flatten.bed; cat {base}.flatten.fasta; cat {base}.flatten.bed"
output.flatten = "-"

[envs.flatten_test]
binary = true
command = "slow_odgi flatten {filename}"
output.flatten = "-"

[envs.flip_oracle]
binary = true
command = "odgi flip -i {filename} -o - | odgi view -g -i - | slow_odgi norm"
output.flip = "-"

[envs.flip_test]
binary = true
command = "slow_odgi flip {filename}"
output.flip = "-"

[envs.inject_setup]
binary = true
command = "slow_odgi inject_setup < {filename}"
output.bed = "-"

[envs.inject_oracle]
binary = true
command = "odgi inject -i {filename} -b {base}.bed -o - | odgi view -g -i - | slow_odgi norm --nl"
output.inj = "-"

[envs.inject_test]
binary = true
command = "slow_odgi inject --bed {base}.bed {filename}"
output.inj = "-"

[envs.matrix_oracle]
binary = true
command = "odgi matrix -i {filename} | sort"
output.matrix = "-"

[envs.matrix_test]
binary = true
command = "slow_odgi matrix {filename} | sort"
output.matrix = "-"

[envs.norm_oracle]
binary = true
command = "odgi view -g -i {filename} | slow_odgi norm"
output.norm = "-"

[envs.norm_test]
binary = true
command = "slow_odgi norm {filename}"
output.norm = "-"

[envs.overlap_setup]
binary = true
command = "slow_odgi somepaths --drop 50 {filename}"
output.overlappaths = "-"

[envs.overlap_oracle]
binary = true
command = "odgi overlap -i {filename} -R {base}.overlappaths"
output.overlap = "-"

[envs.overlap_test]
binary = true
command = "slow_odgi overlap --paths {base}.overlappaths {filename}"
output.overlap = "-"

[envs.paths_oracle]
binary = true
command = "odgi paths -i {filename} -L"
output.paths = "-"

[envs.paths_test]
binary = true
command = "slow_odgi paths {filename}"
output.paths = "-"

# Drop some links in the "real" input graphs to produce invalid graphs, in the
# `invalid` subdirectory, that will yield interesting errors when running
# validation.
[envs.validate_setup]
binary = true
command = "slow_odgi validate_setup < {filename}"
output.gfa = "-"
out_dir = "invalid"

[envs.validate_oracle]
binary = true
command = "odgi validate -i {filename} 2>&1"
output.validate = "-"

# An alternate version for graphs that are supposed to fail validation.
[envs.validate_oracle_err]
binary = true
command = "odgi validate -i {filename} 2>&1"
output.validate = "-"
return_code = 1

[envs.validate_test]
binary = true
command = "slow_odgi validate {filename}"
output.validate = "-"

[envs.pollen_data_gen_depth_oracle]
binary = true
command = "exine depth -d {filename} -a {filename}"
output.json = "-"

[envs.pollen_data_gen_depth_test]
binary = true
command = "pollen_data_gen simple {filename} | jq .depth"
output.json = "-"

[envs.flatgfa_mem]
command = "../flatgfa/target/debug/fgfa < {filename}"
output.gfa = "-"

[envs.flatgfa_file]
command = "../flatgfa/target/debug/fgfa -o {base}.flatgfa < {filename} ; ../flatgfa/target/debug/fgfa -i {base}.flatgfa"
output.gfa = "-"

[envs.flatgfa_file_inplace]
command = "../flatgfa/target/debug/fgfa -m -p 128 -o {base}.inplace.flatgfa -I {filename} ; ../flatgfa/target/debug/fgfa -m -i {base}.inplace.flatgfa"
output.gfa = "-"

[envs.odgi_depth]
binary = true
command = "odgi depth -d -i {filename}"
output.depth = "-"

[envs.flatgfa_depth]
command = "../flatgfa/target/debug/fgfa -I {filename} depth"
output.depth = "-"

[envs.chop_oracle_fgfa]
binary = true 
command = "odgi chop -i {filename} -c 3 -o - | odgi view -g -i - | slow_odgi norm"
output.chop = "-"

[envs.flatgfa_chop]
command = "../flatgfa/target/debug/fgfa -I {filename} chop -l -c 3 | slow_odgi norm"
output.chop = "-"

[envs.odgi_extract]
binary = true
command = "odgi extract -i {filename} -n 3 -c 3 -o - | odgi view -g -i - | slow_odgi norm"
output.extract = "-"

[envs.flatgfa_extract]
command = "../flatgfa/target/debug/fgfa -I {filename} extract -n 3 -c 3 | slow_odgi norm"
output.extract = "-"
