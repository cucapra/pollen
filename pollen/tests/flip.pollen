def flip() {
  graph out_g;

  for path in paths {
    flip_path(path);
  }
}

def flip_path(path: Path) {
  parset out_steps[Step, out_g];
  max_step_idx = path.length() - 1;
  if is_rev(path) {
    for step in path.steps {
      emit
      { step with handle: 
          { step.handle with
            orientation: !step.handle.orientation
          },
          idx: max_step_idx - step.idx
      } to out_steps;
    }
  }
}

def is_rev(path: Path) {
  fw = 0;
  bw = 0;
  for step in path.steps {
    sh = step.handle;
    len = sh.segment.length();
    if sh.orientation {
      fw = fw + len;
    }
    else {
      bw = bw + len;
    }
  }
  return bw > fw;
}